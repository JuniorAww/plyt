import { Markup } from 'telegraf'
import { getUser, save as saveUsers } from '../data/users'
import { getChatById } from '../data/chats'
import { getMember, isAdmin } from '../utils/chats'

const essay_keyboard = Markup.inlineKeyboard([
    [ Markup.button.callback('üí• –û—Ç–º–µ–Ω–∏—Ç—å', 'cancel essay') ],
])

const handleStart = async ctx => {
    if(ctx.chat.id < 0) return;

    const payload = ctx.payload
    
    if (payload) {
        if (payload[0] === '-') {
            const chat = await getChatById(+payload) // number
            const user = ctx.user;
            
            if (!chat) return await ctx.reply(`üí• <b>–£–ø—Å!</b>\n–ì—Ä—É–ø–ø–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–µ–ª–∏ –≤—Å—Ç—É–ø–∏—Ç—å, —É–¥–∞–ª–µ–Ω–∞.`)
            
            if (!chat.linkEnabled) return await ctx.reply(`üí• <b>–£–ø—Å!</b>\n–ì—Ä—É–ø–ø–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–µ–ª–∏ –≤—Å—Ç—É–ø–∏—Ç—å, –æ—Ç–∫–ª—é—á–∏–ª–∞ –∞–Ω–∫–µ—Ç—ã.`)
            
            if (user.limits?.essay && user.limits.essay < Date.now() / 1000) return await ctx.reply(`üí• <b>–£–ø—Å!</b>\n–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É.`)
            
            if (user.limits?.essays?.find(chatId => chatId === chat.id)) return await ctx.reply(`üí• <b>–£–ø—Å!</b>\n–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∞–Ω–∫–µ—Ç—É –≤ –¥–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É.`)
            
            user.state = {
                essay: 1,
                chatId: chat.id
            }
            
            await ctx.reply(`üí´ <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!</b>\n–Ø –Ω–∞—à–µ–ª –≥—Ä—É–ø–ø—É, –≤ –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É.\n–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ç–µ–±–µ –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∞–Ω–∫–µ—Ç—É –¥–ª–∏–Ω–æ–π –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤!\n–û–Ω–∞ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∞–¥–º–∏–Ω–∞–º–∏. –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º!`, essay_keyboard)
            
            await saveUsers()
        }
        else if (payload[0] === '0') {
            const [ chatId, essayId ] = payload.slice(1).split('-')
            if(!essayId) return;
            
            const chat = await getChatById(-chatId) // chatId must have MINUS
            
            if (!chat) return;
            if (!await getMember(ctx)) return await ctx.reply(`üí• <b>–£–ø—Å!</b>\n–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –≥—Ä—É–ø–ø–µ.`)
            
            const essay = chat.essays?.[+essayId]
            if(!essay) return await ctx.reply(`üí• <b>–£–ø—Å!</b>\n–ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`)
            
            const admin = await isAdmin(ctx, -chatId);
            const keyboard = admin ? Markup.inlineKeyboard([
                [ Markup.button.callback('üíö –ü—Ä–∏–Ω—è—Ç—å', `essay ${chatId} ${essayId} accept`) ],
                [ Markup.button.callback('üí• –û—Ç–∫–ª–æ–Ω–∏—Ç—å', `essay ${chatId} ${essayId} decline`) ],
            ]) : {}
            
            return await ctx.reply(`üß° <b>–ê–Ω–∫–µ—Ç–∞ –æ—Ç</b> ${essay.from.first_name}\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: ‚Üì\n${essay.text}`, { ...keyboard })
        }
    } else {
        const keyboard = Markup.inlineKeyboard([
            //[ Markup.button.callback('üí´ –ö–∞–º–µ—Ä—ã', 'cctv') ],
            //[ Markup.button.callback('‚ùå –ù–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å', 'disk') ],
        ])
        
        const message = await ctx.reply(`üí´ <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!</b>`, keyboard)
    }
}

export default handleStart
